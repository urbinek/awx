---
- name: Aktualizacja MikroTik RouterOS przez API
  hosts: all
  connection: local
  gather_facts: false

  vars:
    mikrotik_api_auth_header: "Basic {{ ( mikrotik_user + ':' + mikrotik_password ) | b64encode }}"

  tasks:
    - name: Sprawdzanie dostępności aktualizacji RouterOS
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}/rest/system/package/update/check-for-updates"
        method: POST
        headers:
          Content-Type: 'application/json'
          Authorization: "{{ mikrotik_api_auth_header }}"
        body:
          without-paging: ""
        body_format: json
        validate_certs: false 
      register: update_check_result
      changed_when: false # 

    - name: Wyświetl wynik sprawdzania aktualizacji
      ansible.builtin.debug:
        var: update_check_result.json

    # --- ZADANIE 2: Pobranie i instalacja aktualizacji ---
    # To zadanie inicjuje proces pobierania i instalacji nowej wersji RouterOS.
    - name: Pobierz i zainstaluj aktualizacje
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}/rest/system/package/update/download"
        method: POST
        headers:
          Content-Type: 'application/json'
          Authorization: "{{ mikrotik_api_auth_header }}"
        validate_certs: false
      register: install_result
      # Warunek: uruchom to zadanie tylko, jeśli poprzednie zadanie znalazło nową wersję.
      # Klucz 'version' zazwyczaj pojawia się w odpowiedzi, gdy jest dostępna aktualizacja.
      #when: update_check_result.json and 'version' in (update_check_result.json | first | default({}))

    - name: Wyświetl wynik instalacji
      ansible.builtin.debug:
        var: install_result.json
      when: install_result.changed

    # # --- ZADANIE 3: Restart urządzenia (opcjonalnie, ale zalecane) ---
    # # Po aktualizacji RouterOS wymagany jest restart.
    # - name: 3. Zrestartuj urządzenie, aby zakończyć aktualizację
    #   ansible.builtin.uri:
    #     url: "https://{{ inventory_hostname }}/rest/system/reboot"
    #     method: POST
    #     headers:
    #       Content-Type: 'application/json'
    #       Authorization: "{{ mikrotik_api_auth_header }}"
    #     validate_certs: false
    #   when: install_result.changed # Uruchom tylko, jeśli instalacja się odbyła