---
- name: Aktualizacja urządzeń MikroTik RouterOS (przez REST API v7)
  hosts: mikrotik_devices
  gather_facts: false
  connection: local

  module_defaults:
    community.routeros.api:
      username: "{{ mikrotik_user }}+cet512w"
      password: "{{ mikrotik_password }}"

  tasks:
    - name: Get "ip address print"
      community.routeros.api:
        hostname: "{{ inventory_hostname }}"
        path: "/ip/address"
        # The following options configure TLS/SSL.
        # Depending on your setup, these options need different values:
        tls: true
        validate_certs: false
        validate_cert_hostname: false
        # If you are using your own PKI, specify the path to your CA certificate here:
        # ca_path: /path/to/ca-certificate.pem
      register: print_path

    - name: Show IP address of first interface
      ansible.builtin.debug:
        msg: "{{ print_path.msg[0].address }}"

    - name: Show IP address of first interface
      ansible.builtin.debug:
        msg: "{{ print_path.msg }}"




  # # Ustawienie połączenia na poziomie Playbooka (zgodnie z dokumentacją)
  # connection: httpapi

  # vars:
  #   # --- Konfiguracja połączenia dla REST API ---
  #   # Wtyczka jest teraz jedyną rzeczą związaną z httpapi w vars
  #   ansible_httpapi_plugin: community.routeros.routeros_rest
  #   ansible_user: "{{ mikrotik_user }}+cet512w"
  #   # 'ansible_password' zostanie dostarczone przez AWX Credential

  #   ansible_httpapi_use_ssl: yes
  #   ansible_httpapi_validate_certs: no
  #   ansible_command_timeout: 60

  # tasks:
  #   - name: Pobranie informacji o wersji (sprawdzenie połączenia)
  #     community.routeros.api:
  #       path: /system/resource
  #     register: current_version_check
  #     changed_when: false

  #   - name: Wyświetlenie obecnej wersji
  #     ansible.builtin.debug:
  #       msg: "Obecna wersja: {{ current_version_check.result[0].version }}"

  #   - name: Ustawienie stabilnej gałęzi aktualizacji (stable)
  #     community.routeros.api:
  #       path: /system/package/update
  #       query:
  #         channel: "stable"
  #     changed_when: false

  #   - name: Sprawdzenie, czy jest dostępna nowa wersja RouterOS
  #     community.routeros.api:
  #       path: /system/package/update/check-for-updates
  #     register: update_check
  #     # Wynik również jest na liście [0]
  #     changed_when: update_check.result[0].status == "New version is available"

  #   - name: Wyświetlenie informacji o dostępnej wersji (jeśli znaleziono)
  #     ansible.builtin.debug:
  #       msg: >-
  #         Dostępna nowa wersja: {{ update_check.result[0]['latest-version'] }}
  #         Obecna wersja: {{ update_check.result[0]['current-version'] }}
  #     when: update_check.changed

  #   - name: Proces aktualizacji i restartu urządzenia
  #     block:
  #       - name: Pobranie pakietu aktualizacyjnego
  #         community.routeros.api:
  #           path: /system/package/update/download
  #         register: download_status
  #         changed_when: "'Downloaded' in download_status.result[0].status"
  #         async: 120 # Pobieranie może chwilę zająć
  #         poll: 5

  #       - name: Restart urządzenia w celu instalacji aktualizacji
  #         community.routeros.api:
  #           path: /system/reboot
  #         async: 45
  #         poll: 0

  #       - name: Oczekiwanie na ponowne uruchomienie urządzenia (port HTTPS)
  #         ansible.builtin.wait_for:
  #           host: "{{ inventory_hostname }}"
  #           port: 443  # Czekamy na port API (www-ssl)
  #           state: started
  #           delay: 30
  #           timeout: 300
  #         delegate_to: localhost

  #       - name: Weryfikacja wersji po aktualizacji (z ponowieniami)
  #         community.routeros.api:
  #           path: /system/resource
  #         register: final_version_check
  #         until: final_version_check.failed == false
  #         retries: 10
  #         delay: 15
  #         changed_when: false

  #       - name: Wyświetlenie finalnej wersji RouterOS
  #         ansible.builtin.debug:
  #           msg: "SUKCES: Urządzenie {{ inventory_hostname }} zaktualizowane do wersji: {{ final_version_check.result[0].version }}"

  #     when: update_check.changed
