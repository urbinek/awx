---
- name: Aktualizacja MikroTik RouterOS przez API
  hosts: all
  connection: local
  gather_facts: false

  vars:
    mikrotik_api_auth_header: "Basic {{ ( mikrotik_user + ':' + mikrotik_password ) | b64encode }}"
    mikrotik_update_chanel: stable # development|long-term|stable|testing

  tasks:
    - name: Ustawienie kanału aktualizacji na '{{ mikrotik_update_chanel }}'
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}/rest/system/package/update/set"
        method: POST
        headers:
          ContentPOST-Type: 'application/json'
          Authorization: "{{ mikrotik_api_auth_header }}"
        body:
          channel: "{{ mikrotik_update_chanel }}"
        body_format: json
        validate_certs: false 
      register: set_channel
      changed_when: false # 

    - debug:
        var: set_channel.json

    - name: Odświeżenie informacji o dostępnych aktualizacjach RouterOS
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}/rest/system/package/update/check-for-updates"
        method: POST
        headers:
          Content-Type: 'application/json'
          Authorization: "{{ mikrotik_api_auth_header }}"
        body:
          without-paging: ""
        body_format: json
        validate_certs: false 
      register: check_for_updates
      changed_when: false 

    - debug:
        var: check_for_updates.json

    - name: Pobranie statusu bieżącej instalacji
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}/rest/system/package/update"
        method: GET
        headers:
          ContentPOST-Type: 'application/json'
          Authorization: "{{ mikrotik_api_auth_header }}"
        body_format: json
        validate_certs: false 
      register: get_status
      changed_when: false # 

    - debug:
        var: get_status.json

    # --- ZADANIE 2: Pobranie i instalacja aktualizacji ---
    # To zadanie inicjuje proces pobierania i instalacji nowej wersji RouterOS.
    # - name: Pobierz aktualizacje
    #   ansible.builtin.uri:
    #     url: "https://{{ inventory_hostname }}/rest/system/package/update/download"
    #     method: POST
    #     headers:
    #       Content-Type: 'application/json'
    #       Authorization: "{{ mikrotik_api_auth_header }}"
    #     validate_certs: false
    #   register: install_result
    #   # Warunek: uruchom to zadanie tylko, jeśli poprzednie zadanie znalazło nową wersję.
    #   # Klucz 'version' zazwyczaj pojawia się w odpowiedzi, gdy jest dostępna aktualizacja.
    #   #when: update_check_result.json and 'version' in (update_check_result.json | first | default({}))

    # - name: Wyświetl wynik instalacji
    #   ansible.builtin.debug:
    #     var: install_result.json
    #   when: install_result.changed

    # # --- ZADANIE 3: Restart urządzenia (opcjonalnie, ale zalecane) ---
    # # Po aktualizacji RouterOS wymagany jest restart.
    # - name: 3. Zrestartuj urządzenie, aby zakończyć aktualizację
    #   ansible.builtin.uri:
    #     url: "https://{{ inventory_hostname }}/rest/system/reboot"
    #     method: POST
    #     headers:
    #       Content-Type: 'application/json'
    #       Authorization: "{{ mikrotik_api_auth_header }}"
    #     validate_certs: false
    #   when: install_result.changed # Uruchom tylko, jeśli instalacja się odbyła